applications:
  - id: traefik
    name: Traefik
    description: Reverse Proxy
    dockerCompose: |
      version: '2'
      services:
        traefik:
          image: traefik
          env_file: ./traefik.env
          ports:
            - "80:80"
            - "8080:8080"
          volumes:
            - /var/lib/traefik/traefik.toml:/etc/traefik/traefik.toml
  - id: jeedom
    name: JeeDom
    description: Serveur Domotique
    dockerCompose: |
      jeedom:
        image: jeedom/jeedom
        links:
          - jeedom-mysql
        volumes:
          - /dev/ttyUSB0:/dev/ttyUSB0
          - /var/lib/jeedom/web:/var/www/html
        labels:
          - traefik.port=80
          - traefik.frontend.rule=PathPrefixStrip:/jeedom
        privileged: true
        restart: always
      jeedom-mysql:
        image: mysql
        volumes:
          - /var/lib/jeedom/bdd:/var/lib/mysql
        environment:
          - MYSQL_ROOT_PASSWORD=jeedom
        restart: always
  - id: nextcloud
    name: NextCloud
    description: Serveur NextCloud
    dockerCompose: |
      nextcloud:
        image: wonderfall/nextcloud
        links:
          - nextcloud-mysql:nextcloud-mysql
        environment:
          - UID=1000
          - GID=1000
        volumes:
          - /var/lib/nextcloud/data:/data
          - /var/lib/nextcloud/config:/config
          - /var/lib/nextcloud/apps:/apps2
        labels:
          - traefik.frontend.rule=PathPrefixStrip:/nextcloud
      nextcloud-mysql:
        image: mysql
        volumes:
          - /var/lib/nextcloud/bdd:/var/lib/mysql
        environment:
          - MYSQL_ROOT_PASSWORD=nextcloud
          - MYSQL_DATABASE=nextcloud
          - MYSQL_USER=nextcloud
          - MYSQL_PASSWORD=nextcloud
  - id: poste
    name: Poste.io
    description: Serveur Mail
    iptables:
      - port: 25
        protocol: tcp
      - port: 110
        protocol: tcp
      - port: 143
        protocol: tcp
      - port: 465
        protocol: tcp
      - port: 587
        protocol: tcp
      - port: 993
        protocol: tcp
      - port: 995
        protocol: tcp
    dockerCompose: |
      poste:
        image: analogic/poste.io
        volumes:
          - /var/lib/poste:/data
          - /etc/localtime:/etc/localtime:ro
        ports:
          - "25:25"
          - "110:110"
          - "143:143"
          - "465:465"
          - "587:587"
          - "993:993"
          - "995:995"
        env_file: poste.env
        environment:
          - HTTPS=OFF
        labels:
          - traefik.port=80
          - traefik.frontend.rule=Host:poste.arnaudbouts.fr
          - traefik.frontend.entryPoints=http,https
        restart: always
    writeFiles:
      - path: /var/lib/poste/server.ini
        content: |
          ;
          ;      poste.io mailserver configuration
          ;   YOU MUST RESTART CONTAINER AFTER CHANGE
          ;

          [server]
          ; Required settings for mailserver. This hostname have to be unique, it should have proper record in DNS and SSL certificate must cover this host.

          server_hostname = poste.${DOMAIN}
          bounce_email = postmaster@${DOMAIN}
          alerts_email = admin@${DOMAIN}

          [relay]
          ; List of IP addresses which are allowed to send emails trough server without any authentication.

          relay_hosts =

          [spamassassin_inbound]
          ; All incoming emails will be passed through additional spam filter (spamassassin) with following settings.

          spamassassin_inbound_enabled = 1
          spamassassin_inbound_block_score = 12
          spamassassin_inbound_headers_add = 1
          spamassassin_inbound_change_subject_enabled = 1
          spamassassin_inbound_change_subject_score = 6
          spamassassin_inbound_change_subject_prepend = *****SPAM*****

          [spamassassin_outbound]
          ; If you really don't trust your authenticated users or relayed ip or its critical for you to avoid blacklists you should check (and eventually block) outgoing emails.

          spamassassin_outbound_enabled = 0
          spamassassin_outbound_block_score = 10

          [lets_encrypt]
          ; Let's encrypt configured domains

          ; cert_domains =

          [brand]
          ; As default everywhere is used 'poste.io'

          ; brand_name =
